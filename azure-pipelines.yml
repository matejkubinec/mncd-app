
# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pr:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  azureSubscription: '6bd06657-2155-4af5-9d6a-8fc06361ed75'
  appName: 'mncd'

stages:
- stage: build
  displayName: Build
  jobs:
    - job: build_job
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'dotnet restore'
          inputs:
            command: 'restore'
            feedsToUse: 'select'
            vstsFeed: 'c576e1dd-4ca0-46b7-8ea3-b4de73f796eb/d9aebe10-63af-42e6-868c-18e277673283'
            projects: 'src/**/*.csproj'

        - script: dotnet build --configuration $(buildConfiguration)
          displayName: 'dotnet build $(buildConfiguration)'
          workingDirectory: 'src'

- stage: test
  displayName: Test
  dependsOn: build
  jobs:
    - job: test
      displayName: Test
      steps:
          - task: DotNetCoreCLI@2
            displayName: 'dotnet test'
            inputs:
              command: 'test'
              workingDirectory: src

- stage: deploy
  displayName: Deploy
  dependsOn: test
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
    - job: deploy_job
      steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            feedsToUse: 'select'
            vstsFeed: 'c576e1dd-4ca0-46b7-8ea3-b4de73f796eb/d9aebe10-63af-42e6-868c-18e277673283'
            projects: 'src/**/*.csproj'

        - task: DotNetCoreCLI@2
          inputs:
            command: publish
            publishWebProjects: True
            workingDirectory: src
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: True

        - task: PublishBuildArtifacts@1
          inputs:
            pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
            artifactName: 'myWebsiteName'

        - task: AzureWebApp@1
          inputs:
            azureSubscription: $(azureSubscription)
            appType: webAppLinux
            appName: $(appName)
            package: $(System.ArtifactsDirectory)/**/*.zip