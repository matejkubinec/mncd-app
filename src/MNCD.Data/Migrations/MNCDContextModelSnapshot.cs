// <auto-generated />
using System;
using MNCD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MNCD.Data.Migrations
{
    [DbContext(typeof(MNCDContext))]
    partial class MNCDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("MNCD.Domain.Entities.Analysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AnalysisSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisSessionId");

                    b.HasIndex("RequestId");

                    b.ToTable("Analyses");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.AnalysisRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnalysisAlgorithm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnalysisAlgorithmParameters")
                        .HasColumnType("TEXT");

                    b.Property<int>("Approach")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlattenningAlgorithm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FlattenningAlgorithmParameters")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SelectedLayer")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("AnalysisRequests");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.AnalysisSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AnalysisSessions");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.NetworkDataSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int>("FileType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InfoId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.NetworkInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EdgeCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LayerCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NodeCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("NetworkInfos");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.Analysis", b =>
                {
                    b.HasOne("MNCD.Domain.Entities.AnalysisSession", null)
                        .WithMany("Analyses")
                        .HasForeignKey("AnalysisSessionId");

                    b.HasOne("MNCD.Domain.Entities.AnalysisRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.AnalysisRequest", b =>
                {
                    b.HasOne("MNCD.Domain.Entities.NetworkDataSet", "Dataset")
                        .WithMany()
                        .HasForeignKey("DatasetId");
                });

            modelBuilder.Entity("MNCD.Domain.Entities.NetworkDataSet", b =>
                {
                    b.HasOne("MNCD.Domain.Entities.NetworkInfo", "Info")
                        .WithMany()
                        .HasForeignKey("InfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
